percent
newdata <- data.frame(age = 50, hypertension = 1, heart_disease = 1, avg_glucose_level = 150, bmi = 45)
probabilities <- model %>% predict(newdata, type = "response")
probabilities
percent <- probabilities * 100
percent
str(stroke)
model <- glm( stroke ~ age + hypertension + heart_disease + avg_glucose_level + bmi +smoking_status,
data = stroke, family = binomial)
summary(model)$coef
coef(model)
newdata <- data.frame(age = 50, hypertension = 1, heart_disease = 1, avg_glucose_level = 150, bmi = 45, smoking_status = "smokes")
probabilities <- model %>% predict(newdata, type = "response")
probabilities
percent <- probabilities * 100
percent
stroke$smoking_status <- factor(stroke$smoking_status)
model <- glm( stroke ~ age + hypertension + heart_disease + avg_glucose_level + bmi +smoking_status,
data = stroke, family = binomial)
summary(model)$coef
coef(model)
summary(model )$coef
newdata <- data.frame(age = 50, hypertension = 1, heart_disease = 1, avg_glucose_level = 150, bmi = 45, smoking_status = "smokes")
probabilities <- model %>% predict(newdata, type = "response")
probabilities
percent <- probabilities * 100
percent
str(stroke)
stroke <- read.csv("/home/bao/DataAnalysis/stroke-data.csv")
stroke$bmi<- as.numeric(stroke$bmi)
str(stroke)
stroked <- stroke[stroke$stroke == 1,]
strokedBMI <- mean(stroked$bmi, na.rm = TRUE)
stroke$smoking_status <- factor(stroke$smoking_status)
model <- glm( stroke ~ age + hypertension + heart_disease + avg_glucose_level + bmi +smoking_status,
data = stroke, family = binomial)
summary(model)$coef
coef(model)
summary(model )$coef
newdata <- data.frame(age = 50, hypertension = 1, heart_disease = 1, avg_glucose_level = 150, bmi = 45, smoking_status = "smokes")
probabilities <- model %>% predict(newdata, type = "response")
probabilities
percent <- probabilities * 100
percent
newdata <- data.frame(age = 50, hypertension = 1, heart_disease = 1, avg_glucose_level = 150, bmi = 45, smoking_status = "never_smoked")
probabilities <- model %>% predict(newdata, type = "response")
probabilities
newdata <- data.frame(age = 50, hypertension = 1, heart_disease = 1, avg_glucose_level = 150, bmi = 45, smoking_status = "never smoked")
probabilities <- model %>% predict(newdata, type = "response")
probabilities
percent <- probabilities * 100
percent
predictData <- stroke
df <- stroke
str(stroke)
df$gender <- ifelse(df$gender == "Male", 1, 0)
df$gender <- factor(df$gender)
str(stroke)
df$gender <- ifelse(df$gender == "Male", 1, 0)
df$gender <- factor(df$gender)
str(df)
df$gender <- as.integer(df$gender)
str(df)
df$ever_married <- ifelse(df$ever_married == "Yes", 1, 0)
df$gender <- as.integer(df$ever_married)
str(df)
df$ever_married <- as.integer(df$ever_married)
str(df)
df$work_type <- as.integer(df$work_type)
str(df)
df <- stroke
df$gender <- ifelse(df$gender == "Male", 1, 0)
df$gender <- as.integer(df$gender)
df$ever_married <- ifelse(df$ever_married == "Yes", 1, 0)
df$ever_married <- as.integer(df$ever_married)
print(unique(df$work_type))
df$work_type <- sapply(df$work_type, switch, "Private"=1, "Self-employed"=2, "Govt_job"=3, "children"=4, "Never_worked"=6)
df$work_type <- as.integer(df$work_type)
str(df)
df$Residence_type <- ifelse(df$Residence_type == "Urban", 1, 0)
df$Residence_type <- as.integer(df$Residence_type)
str(df)
model <- glm( stroke ~ age + hypertension + heart_disease + avg_glucose_level + bmi +smoking_status,
data = stroke, family = binomial)
summary(model)$coef
print(unique(df$smoking_status))
df <- stroke
str(df)
df$gender <- ifelse(df$gender == "Male", 1, 0)
df$gender <- as.integer(df$gender)
df$ever_married <- ifelse(df$ever_married == "Yes", 1, 0)
df$ever_married <- as.integer(df$ever_married)
print(unique(df$smoking_status))
df$work_type <- sapply(df$work_type, switch, "Private"=1, "Self-employed"=2, "Govt_job"=3, "children"=4, "Never_worked"=5)
df$work_type <- as.integer(df$work_type)
df$Residence_type <- ifelse(df$Residence_type == "Urban", 1, 0)
df$Residence_type <- as.integer(df$Residence_type)
df$smoking_status <- sapply(df$smoking_status, switch, "formerly smoked"=1, "never smoked"=2, "smokes"=3, "Unknown"=4)
df$smoking_status <- as.integer(df$smoking_status)
stroked <- stroke[stroke$stroke == 1,]
strokedBMI <- mean(stroked$bmi, na.rm = TRUE)
str(df)
model <- glm( stroke ~ gender + age + hypertension + heart_disease + ever_married + work_type + Residence_type + avg_glucose_level + bmi +smoking_status,
data = stroke, family = binomial)
summary(model)$coef
stroke$bmi<- as.numeric(stroke$bmi)
stroke <- read.csv("/home/bao/DataAnalysis/stroke-data.csv")
df <- stroke
str(df)
df$smoking_status <- sapply(df$smoking_status, switch, "formerly smoked"=1, "never smoked"=2, "smokes"=3, "Unknown"=4)
df$smoking_status <- as.integer(df$smoking_status)
df <- stroke
str(df)
df$smoking_status <- sapply(df$smoking_status, switch, "formerly smoked"=1, "never smoked"=2, "smokes"=3, "Unknown"=4)
df$smoking_status <- as.integer(df$smoking_status)
str(df)
df$gender <- ifelse(df$gender == "Male", 1, 0)
df$gender <- as.integer(df$gender)
df$ever_married <- ifelse(df$ever_married == "Yes", 1, 0)
df$ever_married <- as.integer(df$ever_married)
df$work_type <- sapply(df$work_type, switch, "Private"=1, "Self-employed"=2, "Govt_job"=3, "children"=4, "Never_worked"=5)
df$work_type <- as.integer(df$work_type)
df$Residence_type <- ifelse(df$Residence_type == "Urban", 1, 0)
df$Residence_type <- as.integer(df$Residence_type)
model <- glm( stroke ~ gender + age + hypertension + heart_disease + ever_married + work_type + Residence_type + avg_glucose_level + bmi +smoking_status,
data = df, family = binomial)
summary(model)$coef
stroke <- read.csv("/home/bao/DataAnalysis/stroke-data.csv")
stroke$bmi<- as.numeric(stroke$bmi)
str(stroke)
df <- stroke
str(df)
df$gender <- ifelse(df$gender == "Male", 1, 0)
df$gender <- as.integer(df$gender)
df$ever_married <- ifelse(df$ever_married == "Yes", 1, 0)
df$ever_married <- as.integer(df$ever_married)
df$work_type <- sapply(df$work_type, switch, "Private"=1, "Self-employed"=2, "Govt_job"=3, "children"=4, "Never_worked"=5)
df$work_type <- as.integer(df$work_type)
df$Residence_type <- ifelse(df$Residence_type == "Urban", 1, 0)
df$Residence_type <- as.integer(df$Residence_type)
df$smoking_status <- sapply(df$smoking_status, switch, "formerly smoked"=1, "never smoked"=2, "smokes"=3, "Unknown"=4)
df$smoking_status <- as.integer(df$smoking_status)
model <- glm( stroke ~ gender + age + hypertension + heart_disease + ever_married + work_type + Residence_type + avg_glucose_level + bmi +smoking_status,
data = df, family = binomial)
summary(model)$coef
coef(model)
newdata <- data.frame(gender = 1, age = 50, hypertension = 1, heart_disease = 1, ever_married=1, work_type =2, Residence_type =1, avg_glucose_level = 150, bmi = 25, smoking_status = 3)
probabilities <- model %>% predict(newdata, type = "response")
probabilities
percent <- probabilities * 100
percent
newdata <- data.frame(gender = 1, age = 80, hypertension = 1, heart_disease = 1, ever_married=1, work_type =2, Residence_type =1, avg_glucose_level = 150, bmi = 25, smoking_status = 3)
probabilities <- model %>% predict(newdata, type = "response")
probabilities
percent <- probabilities * 100
percent
newdata <- data.frame(gender = 1, age = 50, hypertension = 1, heart_disease = 1, ever_married=1, work_type =2, Residence_type =1, avg_glucose_level = 150, bmi = 25, smoking_status = 3)
probabilities <- model %>% predict(newdata, type = "response")
probabilities
percent <- probabilities * 100
percent
newdata <- data.frame(gender = 1, age = 20, hypertension = 1, heart_disease = 1, ever_married=1, work_type =2, Residence_type =1, avg_glucose_level = 150, bmi = 25, smoking_status = 3)
probabilities <- model %>% predict(newdata, type = "response")
probabilities
percent <- probabilities * 100
percent
probabilities <- model %>% predict(data.frame(gender = 1, age = 20, hypertension = 1, heart_disease = 1, ever_married=1, work_type =2, Residence_type =1, avg_glucose_level = 150, bmi = 25, smoking_status = 3), type = "response")*100
probabilities
probabilities <- model %>% predict(data.frame(gender = 1, age = 80, hypertension = 1, heart_disease = 1, ever_married=1, work_type =2, Residence_type =1, avg_glucose_level = 150, bmi = 25, smoking_status = 3), type = "response")*100
probabilities
runApp('testcode2.R')
probabilities <- model %>% predict(data.frame(gender = 1, age = 20, hypertension = 1, heart_disease = 1, ever_married=1, work_type =2, Residence_type =1, avg_glucose_level = 150, bmi = 25, smoking_status = 3), type = "response")*100
probabilities
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
a <- probabilities[1]
a <- probabilities[1,]
a <- probabilities[,1]
runApp('testcode2.R')
runApp('testcode2.R')
str(stroke)
runApp('testcode2.R')
library(shiny); runApp('testcode2.R')
stroke$bmi<- as.numeric(stroke$bmi)
str(stroke)
df <- stroke
str(df)
df$gender <- ifelse(df$gender == "Male", 1, 0)
df$gender <- as.integer(df$gender)
df$ever_married <- ifelse(df$ever_married == "Yes", 1, 0)
df$ever_married <- as.integer(df$ever_married)
df$work_type <- sapply(df$work_type, switch, "Private"=1, "Self-employed"=2, "Govt_job"=3, "children"=4, "Never_worked"=5)
df$work_type <- as.integer(df$work_type)
df$Residence_type <- ifelse(df$Residence_type == "Urban", 1, 0)
df$Residence_type <- as.integer(df$Residence_type)
df$smoking_status <- sapply(df$smoking_status, switch, "formerly smoked"=1, "never smoked"=2, "smokes"=3, "Unknown"=4)
df$smoking_status <- as.integer(df$smoking_status)
probabilities <- model %>% predict(data.frame(gender = 1, age = 20, hypertension = 1, heart_disease = 1, ever_married=1, work_type =2, Residence_type =1, avg_glucose_level = 150, bmi = 25, smoking_status = 3), type = "response")*100
probabilities
library(psych)
library(dplyr)
probabilities <- model %>% predict(data.frame(gender = 1, age = 20, hypertension = 1, heart_disease = 1, ever_married=1, work_type =2, Residence_type =1, avg_glucose_level = 150, bmi = 25, smoking_status = 3), type = "response")*100
probabilities
library(dplyr)
probabilities <- model %>% predict(data.frame(gender = 1, age = 20, hypertension = 1, heart_disease = 1, ever_married=1, work_type =2, Residence_type =1, avg_glucose_level = 150, bmi = 25, smoking_status = 3), type = "response")*100
library(tidyverse)
library(tidyr)
probabilities <- model %>% predict(data.frame(gender = 1, age = 20, hypertension = 1, heart_disease = 1, ever_married=1, work_type =2, Residence_type =1, avg_glucose_level = 150, bmi = 25, smoking_status = 3), type = "response")*100
library(tibble)
probabilities <- model %>% predict(data.frame(gender = 1, age = 20, hypertension = 1, heart_disease = 1, ever_married=1, work_type =2, Residence_type =1, avg_glucose_level = 150, bmi = 25, smoking_status = 3), type = "response")*100
probabilities
runApp('testcode2.R')
library(shiny); runApp('testcode2.R')
model <- glm( stroke ~ gender + age + hypertension + heart_disease + ever_married + work_type + Residence_type + avg_glucose_level + bmi +smoking_status,
data = df, family = binomial)
df <- stroke
model <- glm( stroke ~ gender + age + hypertension + heart_disease + ever_married + work_type + Residence_type + avg_glucose_level + bmi +smoking_status,
data = df, family = binomial)
summary(model)$coef
coef(model)
summary(model )$coef
df$gender <- ifelse(df$gender == "Male", 1, 0)
df$gender <- as.integer(df$gender)
df$ever_married <- ifelse(df$ever_married == "Yes", 1, 0)
df$ever_married <- as.integer(df$ever_married)
df$work_type <- sapply(df$work_type, switch, "Private"=1, "Self-employed"=2, "Govt_job"=3, "children"=4, "Never_worked"=5)
df$work_type <- as.integer(df$work_type)
df$Residence_type <- ifelse(df$Residence_type == "Urban", 1, 0)
df$Residence_type <- as.integer(df$Residence_type)
df$smoking_status <- sapply(df$smoking_status, switch, "formerly smoked"=1, "never smoked"=2, "smokes"=3, "Unknown"=4)
df$smoking_status <- as.integer(df$smoking_status)
probabilities <- model %>% predict(data.frame(gender = 1, age = 20, hypertension = 1, heart_disease = 1, ever_married=1, work_type =2, Residence_type =1, avg_glucose_level = 150, bmi = 25, smoking_status = 3), type = "response")*100
probabilities
str(df)
stroke$bmi<- as.numeric(stroke$bmi)
str(stroke)
df <- stroke
str(df)
model <- glm( stroke ~ gender + age + hypertension + heart_disease + ever_married + work_type + Residence_type + avg_glucose_level + bmi +smoking_status,
data = df, family = binomial)
summary(model)$coef
coef(model)
summary(model )$coef
df$gender <- ifelse(df$gender == "Male", 1, 0)
df$gender <- as.integer(df$gender)
df$ever_married <- ifelse(df$ever_married == "Yes", 1, 0)
df$ever_married <- as.integer(df$ever_married)
df$work_type <- sapply(df$work_type, switch, "Private"=1, "Self-employed"=2, "Govt_job"=3, "children"=4, "Never_worked"=5)
df$work_type <- as.integer(df$work_type)
df$Residence_type <- ifelse(df$Residence_type == "Urban", 1, 0)
df$Residence_type <- as.integer(df$Residence_type)
df$smoking_status <- sapply(df$smoking_status, switch, "formerly smoked"=1, "never smoked"=2, "smokes"=3, "Unknown"=4)
df$smoking_status <- as.integer(df$smoking_status)
probabilities <- model %>% predict(data.frame(gender = 1, age = 20, hypertension = 1, heart_disease = 1, ever_married=1, work_type =2, Residence_type =1, avg_glucose_level = 150, bmi = 25, smoking_status = 3), type = "response")*100
probabilities
runApp('testcode2.R')
newdata <- data.frame(gender = 1, age = 20, hypertension = 1, heart_disease = 1, ever_married=1, work_type =2, Residence_type =1, avg_glucose_level = 150, bmi = 25, smoking_status = 3)
probabilities <- model %>% predict(newdata, type = "response")*100
View(newdata)
runApp('testcode2.R')
model <- glm( stroke ~ gender + age + hypertension + heart_disease + ever_married + work_type + Residence_type + avg_glucose_level + bmi +smoking_status,
data = df, family = binomial)
newdata <- data.frame(gender = 1, age = 20, hypertension = 1, heart_disease = 1, ever_married=1, work_type =2, Residence_type =1, avg_glucose_level = 150, bmi = 25, smoking_status = 3)
probabilities <- model %>% predict(newdata, type = "response")*100
probabilities
runApp('testcode2.R')
runApp('testcode2.R')
View(probabilities)
runApp('testcode2.R')
library(shiny); runApp('testcode2.R')
library(markdown)
library(tidyr)
library(tibble)
library(dplyr)
library(shiny)
library(ggplot2)
dotquy <- read.delim("/home/bao/DataAnalysis/Stroke-Analysis/www/dotquy.txt")
stroke <- read.csv("/home/bao/DataAnalysis/stroke-data.csv")
stroke$bmi<- as.numeric(stroke$bmi)
df <- stroke
df$gender <- ifelse(df$gender == "Male", 1, 0)
df$gender <- as.integer(df$gender)
df$ever_married <- ifelse(df$ever_married == "Yes", 1, 0)
df$ever_married <- as.integer(df$ever_married)
df$work_type <- sapply(df$work_type, switch, "Private"=1, "Self-employed"=2, "Govt_job"=3, "children"=4, "Never_worked"=5)
df$work_type <- as.integer(df$work_type)
df$Residence_type <- ifelse(df$Residence_type == "Urban", 1, 0)
df$Residence_type <- as.integer(df$Residence_type)
df$smoking_status <- sapply(df$smoking_status, switch, "formerly smoked"=1, "never smoked"=2, "smokes"=3, "Unknown"=4)
df$smoking_status <- as.integer(df$smoking_status)
model <- glm( stroke ~ gender + age + hypertension + heart_disease + ever_married + work_type + Residence_type + avg_glucose_level + bmi +smoking_status,
data = df, family = binomial)
newdata <- data.frame(gender = 1, age = 20, hyperten￣sion = 1, heart_disease = 1, ever_married=1, work_type =2, Residence_type =1, avg_glucose_level = 150, bmi = 25, smoking_status = 3)
newdata <- data.frame(gender = 1, age = 20, hypertension = 1, heart_disease = 1, ever_married=1, work_type =2, Residence_type =1, avg_glucose_level = 150, bmi = 25, smoking_status = 3)
probabilities <- model %>% predict(newdata, type = "response")*100
stroked <- stroke[stroke$stroke == 1,]
strokedBMI <- mean(stroked$bmi, na.rm = TRUE)
stroke$smoking_status <- factor(stroke$smoking_status)
print(strokedBMI)
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
output$genderPlot <- renderPlot({
ggplot(stroke[ stroke$gender == input$gender,], aes(x = stroke))+
geom_bar(col = 'black', fill = "#FFF000")
})
runApp('testcode2.R')
runApp('testcode2.R')
library(GGally)
install.packages("GGally")
library(GGally)
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
data <- read.csv("/home/bao/DataAnalysis/stroke-data.csv")
data$stroke_t <- ifelse(df$stroke == 1, 'stroke', 'no stroke')
data$stroke_t <- factor(df$stroke_t)
View(data)
str(data)
data$stroke_t <- factor(df$stroke_t)
data$stroke_t <- as.factor(df$stroke_t)
data$stroke_t <- factor(data$stroke_t)
str(data)
ggplot(df, aes(x = age, fill = stroke_t))+
geom_density(alpha = 0.3)
ggplot(data, aes(x = age, fill = stroke_t))+
geom_density(alpha = 0.3)
df$stroke_t <- ifelse(df$stroke == 1, 'stroke', 'no stroke')
df$stroke_t <- factor(df$stroke_t)
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
library(shiny); runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
Avg_glucose_level_plt2 <- data %>%
ggplot() +
geom_density_ridges_graddataidges_gradient(aes(x = avg_glucose_level, y = stroke, fill = stroke), scale = 2, rel_min_height = 0.001) +
scale_fill_manual(values = c(wes_palette("Royal2")[2], wes_palette("Royal2")[5])) +
theme_minimal() +
labs(x = "Average Glucose Level", y = "Stroke" , title = "")
Avg_glucose_level_plt2
Avg_glucose_level_plt2
# Average glucose level
Avg_glucose_level_plt1 <- df_train %>%
ggplot() +
geom_histogram(data = df_train,
aes(x = Avg_glucose_level),
binwidth = ,
fill = wes_palette("IsleofDogs1")[1], color = "gray") +
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold")) +
labs(y = "Count", x = "Average Glucose Level", title = "Average Glucose Level Distribution")
Avg_glucose_level_plt2 <- df_train %>%
ggplot() +
geom_density_ridges_gradient(aes(x = Avg_glucose_level, y = Stroke, fill = Stroke), scale = 2, rel_min_height = 0.001) +
scale_fill_manual(values = c(wes_palette("Royal2")[2], wes_palette("Royal2")[5])) +
theme_minimal() +
labs(x = "Average Glucose Level", y = "Stroke" , title = "")
Avg_glucose_level_plt3 <- df_train %>%
ggplot() +
geom_boxplot(aes(x = Stroke, y = Avg_glucose_level, fill = Stroke)) +
coord_flip() +
theme_minimal() +
scale_fill_manual(values = c(wes_palette("Royal2")[2], wes_palette("Royal2")[5])) +
labs(x = "Stroke", y = "Average Glucose Level", title = "")
ggarrange(Avg_glucose_level_plt1, Avg_glucose_level_plt2, Avg_glucose_level_plt3,
ncol = 1,
nrow = 3)
ggarrange(Avg_glucose_level_plt1, Avg_glucose_level_plt2, Avg_glucose_level_plt3,
ncol = 1,
nrow = 3)
Avg_glucose_level_plt2 <- data %>%
ggplot() +
geom_density_ridges_graddataidges_gradient(aes(x = avg_glucose_level, y = stroke, fill = stroke), scale = 2, rel_min_height = 0.001) +
scale_fill_manual(values = c(wes_palette("Royal2")[2], wes_palette("Royal2")[5])) +
theme_minimal() +
labs(x = "Average Glucose Level", y = "Stroke" , title = "")
runApp('testcode2.R')
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
install.packages("httr")
install.packages("curl")
Age_plt3 <- data %>%
ggplot() +
geom_boxplot(aes(x = stroke, y = age, fill = stroke)) +
coord_flip() +
theme_minimal() +
scale_fill_manual(values = c(wes_palette("Royal2")[2], wes_palette("Royal2")[5])) +
labs(x = "Stroke", y = "Age (years)", title = "")
library(wesanderson)
install.packages("wesanderson")
library(wesanderson)
Age_plt3 <- data %>%
ggplot() +
geom_boxplot(aes(x = stroke, y = age, fill = stroke)) +
coord_flip() +
theme_minimal() +
scale_fill_manual(values = c(wes_palette("Royal2")[2], wes_palette("Royal2")[5])) +
labs(x = "Stroke", y = "Age (years)", title = "")
View(Age_plt3)
View(Age_plt3)
ggarrange( Age_plt3,
ncol = 1,
nrow = 1)
Age_plt3
ggplot(data, aes(x=!!sym(gender), y=age, fill = !!sym(gender))) +
geom_boxplot()
str(data)
ggplot(data, aes(x=!!sym(gender), y=age, fill = !!sym(gender))) +
geom_boxplot()
require(GGally)
install.packages("GGally")
library(GGally)
df %>%
select(age, avg_glucose_level, bmi) %>%
drop_na() %>%
ggpairs()
runApp('testcode2.R')
ggplot(data, aes(x=!!sym(gender), y=age, fill = !!sym(gender))) +
geom_boxplot()
cat_cols = c(
'gender', 'hypertension', 'heart_disease',
'ever_married', 'work_type', 'Residence_type',
'smoking_status', 'stroke_t'
)
for (col in cat_cols){
print(ggplot(df, aes(x=!!sym(col), y=age, fill = !!sym(col))) +
geom_boxplot())
}
ggplot(df, aes(x=!!sym(col), y=age, fill = !!sym(col))) +
geom_boxplot()
ggplot(df, aes(x=!!sym(stroke_t), y=age, fill = !!sym(stroke_t))) +
geom_boxplot()
ggplot(df, aes(x=stroke_t, y=age, fill = stroke_t)) +
geom_boxplot()
ggplot(df, aes(x=gender, y=age, fill = gender)) +
geom_boxplot()
cat_cols = c(
'gender', 'hypertension', 'heart_disease',
'ever_married', 'work_type', 'Residence_type',
'smoking_status', 'stroke_t'
)
for (col in cat_cols){
print(ggplot(df, aes(x=!!sym(col), y=age, fill = !!sym(col))) +
geom_boxplot())
}
for (col in cat_cols){
print(ggplot(df, aes(x=!!sym(stroke_t), y=age, fill = !!sym(stroke_t))) +
geom_boxplot())
}
print(ggplot(df, aes(x=stroke_t, y=age, fill = stroke_t)) +
geom_boxplot())
print(ggplot(df, aes(x=work_type, y=age, fill = work_type)) +
geom_boxplot())
runApp('testcode2.R')
df$stroke_t <- ifelse(df$stroke == 1, 'stroke', 'no stroke')
df$stroke_t <- factor(df$stroke_t)
df$stroke_t <- ifelse(df$stroke == 1, 'stroke', 'no stroke')
df$stroke_t <- factor(df$stroke_t)
df$hypertension_t <- ifelse(df$hypertension == 1, 'hypertension', 'no hypertension')
df$hypertension_t <- factor(df$hypertension)
df$heart_disease_t <- ifelse(df$heart_disease == 1, 'heart disease', 'no heart disease')
df$heart_disease_t <- factor(df$heart_disease)
runApp('testcode2.R')
View(df)
df$hypertension_t <- ifelse(df$hypertension == 1, 'hypertension', 'no hypertension')
df$hypertension_t <- factor(df$hypertension)
df$heart_disease_t <- ifelse(df$heart_disease == 1, 'heart disease', 'no heart disease')
df$heart_disease_t <- factor(df$heart_disease)
str(df)
df$hypertension_t <- ifelse(df$hypertension == 1, 'hypertension', 'no hypertension')
df$hypertension_t <- factor(df$hypertension_t)
df$heart_disease_t <- ifelse(df$heart_disease == 1, 'heart disease', 'no heart disease')
df$heart_disease_t <- factor(df$heart_disease_t)
str(df)
runApp('testcode2.R')
df$gender_t <- factor(df$gender)
runApp('testcode2.R')
df$ever_married_t <- factor(df$ever_married)
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
print(dim(df[df$smoking_status == 4,]))
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
library(shiny); runApp('testcode2.R')
View(dotquy)
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
runApp('testcode2.R')
